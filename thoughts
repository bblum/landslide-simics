performance
	language
		calling into python will suck - use C
		how fast would hasqel be? how easy?
	simics uses JIT for speed - how many orders of magnitude slowdown?

things to do
	figure out symbol table manipulation


stack
	((empty))

to hook in hax:
	new-tracer
	@hax = SIM_create_object("hax", "hax0", [])
	# ...
	trace0.start
	@SIM_set_attribute(SIM_get_object("trace0"), "consumer", hax)
	# note: setting trace0.start resets the bt->trace_consume to text_tracer; set_consumer after that.

to make an interrupt stack frame:
	@cpu = SIM_get_object("cpu0")
	@SIM_set_attribute(cpu, "esp", cpu.esp - 12) # 3x 4B for eip, cs, eflags
	@SIM_write_phys_memory(cpu, cpu.esp + 0, cpu.eip, 4)
	@SIM_write_phys_memory(cpu, cpu.esp + 4, 16, 4) # KERNEL_SEGSEL_CS == 16
	@SIM_write_phys_memory(cpu, cpu.esp + 8, cpu.eflags, 4)
	@SIM_set_attribute(cpu, "eip", 0x001035bc)

	# note: this *might* be somehow broken...? i saw a triple fault *once*.

other ways to invoke the timer?
	@SIM_get_object("cpu0").pending_interrupt = 1
	@SIM_get_object("cpu0").pending_vector = 32 # will need to be more robust
	@SIM_get_object("cpu0").pending_vector_valid = 1
