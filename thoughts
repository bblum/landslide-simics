stack
	to add another stack trace per choice point, capture the trace at the kern_context_switch_entering point in schedule and store it in the agence..
	memory leak checking at end of test case
	deadlock detection should also look for nobody on RQ
	go clean up old haxes once you mark all_explored
	add shm choice points, start with parent
	attribuce
		arbiter_choice attribute - -42 is retarded
		test_case attribute - durr
	"bookmark blah moved to current time" wha??

landslide debugging guide...
	"cpu0_mem - uncleared memory read raised frontend exception" x100 + assert?
		this happened last with a stale kernel_specifics_pobbles_race.h
		try make clean; make

algs
	execution poince of interest:
		concurrency ifaces
			mutex_lock, mutex_unlock
			cond_wait, cond_signal, cond_broadcast (or analogous)
			other primitives (sem, rw, rend?)
		single instructions
			cli, sti
			xchg, xadd, cmpxchg, cmpxchg8b(???)
			invlpg (maybe?)
			inb/outb (maybe?)
		core scheduler
			yield (scheduler internal version)
			context switcher
		other
			malloc
				(just set eax to 0 and jump to the return)
	
	NOTE: list the particular bugs we're looking for, and possibly only use
	NOTE: the poince of interest relevant to them at one time.

	what biggest [subtle] bugs are we looking for?
		vanish/wait-related unsafety or deadlocks
		oom robustness
		...
		memory validation races
		a mutex_lock/yield/switch/etc while interrupts off / scheduler locked
	
impl details
	how to run the wrapper
		test failed detection
			- easy mode: trap on a panic() and be like "welp"
			- deadlock: START__TYPE_COMPLETE & ... 
				spinning mutexes?
					- all threads on RQ in mutex_lock() -> yield()
						have a counter and watch for it being 0
				descheduling mutexes?
					- empty RQ & ... 
				- empty SQ & no readline
					how to tell no readline? (special case)
			- other, e.g. data structure corruption
				much harder :\
			- in #PF handler, did the fault occur in kernel mode?
				(not always correct to assume that's never OK)
	test case design
		write specific tests for expected bugs?
			how many? - common problem syscall pairs / triplets / ...

miscellaneous todo
	figure out symbol table manipulation
	make simics stop throwing timer interrupts of its own (and control kbd)


write a guide to using landslide ... 
	We assume...
		that your context switcher works
		that if a thread is on the RQ, a finite number of timer interrupts in succession will cause it to run
		sleep must not spin-wait.
		readline must not spin-wait.
		memory below USER_MEM_START is direct-mapped.
	The more asserts you have in your kernel, the easier it will be for landslide to detect if something has gone wrong.
	Edit 410user/progs/shell.c to add: "#define printf(...)" and "#define print(...)" !
	Use the mutex ignores to specify global mutexes - malloc, vm, console
