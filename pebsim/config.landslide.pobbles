################################################################################
# @file config.landslide
# @brief A place to specify names/etc of important functions/etc.
# @author Ben Blum <bblum@andrew.cmu.edu>, and you, the student :)
#
# This is part of a shell script, so write in shell. Available helper functions
# for use in writing this config file:
#
# get_sym        Gets the address of a global symbol in the kernel image.
# get_func       Gets the address of the (first instruction of) a function in
#                the kernel image.
# get_func_end   Gets the address of the LAST instruction in a given function
#                (not including trailing nops) (the instruction is always 'ret')
# ignore_func, ignore_sym - See below.
################################################################################

# The path to your kernel image; the file called "kernel" that gets built.
KERNEL_IMG=kernel-pobbles
# The name of your kernel. Must be only one token; underscores are fine.
# Examples: "pathos" "pathos_broken" but not "pathos-broken"
KERNEL_NAME=pobbles_race

# Relative to the pebsim/ directory.
KERNEL_SOURCE_DIR=kern-race

# What program should landslide run? vanish_vanish, double_thread_fork, ...
TEST_CASE=double_thread_fork

######################
#### Simple stuff ####
######################

# The function registered in the IDT to handle timer interrupts.
TIMER_WRAPPER=timer_handler_wrapper

# The function that all context switches go through. Preferably the outermost
# one - e.g. if a C function calls an assembly function, and both meet this
# criterion, use the name of the former.
CONTEXT_SWITCH=context_switch

# The name of the function in which threads go to sleep on readline.
READLINE=readline

# The TIDs of important threads - init, shell, idle. Comment IDLE_TID out
# entirely if your kernel does not have an explicit idle thread.
INIT_TID=1
SHELL_TID=2
# IDLE_TID=

# After tell_landslide_sched_init_done(), which thread is the first one to run?
FIRST_TID=$INIT_TID

# Call this for each thread that exists in your kernel when it
# tells_landslide_sched_init_done(). The first argument is the TID; the second
# is "1" if the thread is on the runqueue, and "0" if the thread is not (for
# example, if it starts descheduled, or if it's the current thread and
# kern_current_extra_runnable would return true, etc).
starting_threads $INIT_TID 1

#######################################
#### Scheduler/globals information ####
#######################################

# This function will be called later to generate the list of functions that
# comprise your kernel's scheduler. Call 'sched_func' once per function.
sched_func sch_queue_append
sched_func sch_queue_pop
sched_func sch_queue_remove
sched_func sch_queue_search
sched_func sch_runqueue_add_nolock
sched_func sch_runqueue_add
sched_func sch_runqueue_remove
sched_func sch_runqueue_next
sched_func context_switch
sched_func magic_jar
sched_func timer_handler

# Type sizes. Not used by anything outside of this file, so feel free to add or
# remove some as necessary.
INT_SIZE=4
PTR_SIZE=4
MUTEX_SIZE=`echo $(($INT_SIZE+$INT_SIZE))`
RQ_SIZE=`echo $(($PTR_SIZE+$PTR_SIZE+$MUTEX_SIZE))`

# This function will be called later to generate the list of global symbols that
# landslide should ignore shared memory accesses to.
# Call "ignore_sym" once per symbol; arg1 is the symbol name, arg2 is the type's
# size in bytes.
ignore_sym scheduler_locked $INT_SIZE
ignore_sym thr_current $PTR_SIZE
ignore_sym timer_count $INT_SIZE
ignore_sym sleeping $RQ_SIZE
ignore_sym cas2i_queue $RQ_SIZE
ignore_sym runqueue $RQ_SIZE
ignore_sym vm_mutex $MUTEX_SIZE
ignore_sym malloc_lock $MUTEX_SIZE
ignore_sym cmutex $MUTEX_SIZE

####################################################
#### Decision-point / Exploration configuration ####
####################################################

# Define choice points in your kernel itself using tell_landslide_decide().

# List the functions that landslide should "pay attention" to; i.e., landslide
# will only make decision points if tell_landslide_decide() occurs within the
# execution of one of these functions.
# If you don't within_function at all, landslide will "pay attention" to
# everything by default.

within_function tell_landslide_forking
#within_function wait

# You may also list functions that landslide should NOT pay attention to; i.e.,
# even if within one of the "within_function"s (or if none were specified),
# landslide will not make decision points if within a "without_function" also.
# Sequentially-later (i.e. in this file) calls to either within_function or
# without_function take precedence over earlier ones.

#without_function wait_reap

##########################
#### Advanced options ####
##########################

# If you need to know any other global variables when implementing the
# in-landslide hooks, write them here. First argument is the symbol name in your
# kernel; second argument is the name of the define for its address that you'll
# be able to use.
extra_sym scheduler_locked GUEST_SCHEDULER_LOCK

# Landslide has detection for "all threads are wedged", but it's imperfect, so
# by default we let the kernel keep running. If you see an "all threads wedged?"
# message and your kernel doesn't seem to be making progress, change this to 1.
BUG_ON_THREADS_WEDGED=0

# Exploring "backwards" means starting with a forced preemption at every
# decision point. Exploring "forwards" means letting threads continue running by
# default and adding extra preemptions as exploration progresses.
# Backwards is likely to find bugs much more quickly, but will produce a
# longer, more difficult to understand debug trace.
# !!!   Backwards is the recommended default! Only change this if you've   !!!
# !!!     already found a bug and are trying to understand it better!      !!!
EXPLORE_BACKWARDS=1

# Set this to 1 if you want Landslide not to explore the tree, but to stop after
# the first branch and print out the set of decision points that it found using
# your current configuration. This is useful for fine-tuning your set of custom
# decision points.
DECISION_INFO_ONLY=0

# vim: ft=sh
