################################################################################
# @file config.landslide
# @brief A place to specify names/etc of important functions/etc.
# @author Ben Blum <bblum@andrew.cmu.edu>, and you, the student :)
#
# This is part of a shell script, so write in shell. Available helper functions
# for use in writing this config file:
#
# get_sym        Gets the address of a global symbol in the kernel image.
# get_func       Gets the address of the (first instruction of) a function in
#                the kernel image.
# get_func_end   Gets the address of the LAST instruction in a given function
#                (not including trailing nops) (the instruction is always 'ret')
# ignore_func, ignore_sym - See below.
################################################################################

# The path to your kernel image; the file called "kernel" that gets built.
KERNEL_IMG=kernel-ludicros
# The name of your kernel. Must be only one token; underscores are fine.
# Examples: "pathos" "pathos_broken" but not "pathos-broken"
KERNEL_NAME=ludicros

# Relative to the pebsim/ directory.
KERNEL_SOURCE_DIR=ludicros

# What program should landslide run? vanish_vanish, double_thread_fork, ...
TEST_CASE=vanish_vanish

######################
#### Simple stuff ####
######################

# The function registered in the IDT to handle timer interrupts.
TIMER_WRAPPER=interrupt_idt_stub_32
TIMER_WRAPPER_DISPATCH=interrupt_dispatch

# The function that all context switches go through. Preferably the outermost
# one - e.g. if a C function calls an assembly function, and both meet this
# criterion, use the name of the former.
CONTEXT_SWITCH=sched_run_next_thread

# The name of the function in which threads go to sleep on readline.
READLINE=sys_readline

# The TIDs of important threads - init, shell, idle. Comment IDLE_TID out
# entirely if your kernel does not have an explicit idle thread.
INIT_TID=1
SHELL_TID=2
IDLE_TID=0

# After tell_landslide_sched_init_done(), which thread is the first one to run?
FIRST_TID=$INIT_TID

#######################################
#### Scheduler/globals information ####
#######################################

# List here all the functions that comprise your kernel's scheduler. Call
# 'sched_func' once per function.
sched_func sched_find_blocked_thread
sched_func sched_find_thread
sched_func sched_block
sched_func sched_unblock
sched_func sched_process_wakeups
sched_func sched_run_next_thread
sched_func sched_switch_context_and_reschedule
sched_func sched_do_context_switch
sched_func context_return
sched_func sched_reschedule
sched_func sched_yield

# Type sizes. Not used by anything outside of this file, so feel free to add or
# remove some as necessary.
INT_SIZE=4
PTR_SIZE=4
MUTEX_SIZE=`echo $(($INT_SIZE+$INT_SIZE))`
Q_SIZE=`echo $(($PTR_SIZE+$PTR_SIZE))`
COND_SIZE=`echo $(($INT_SIZE+$MUTEX_SIZE+$Q_SIZE))`
SEM_SIZE=`echo $(($INT_SIZE+$INT_SIZE+$INT_SIZE+$MUTEX_SIZE+$COND_SIZE))`

# List here all the global symbols that landslide should ignore shared memory
# accesses to.  Call "ignore_sym" once per symbol; arg1 is the symbol name,
# arg2 is the type's size in bytes.
ignore_sym ticks $INT_SIZE
ignore_sym lock_count $INT_SIZE
ignore_sym unlock_int_flag $INT_SIZE
ignore_sym sched_run_list $Q_SIZE
ignore_sym sched_block_list $Q_SIZE
ignore_sym sched_sleep_list $Q_SIZE
ignore_sym sched_run_list_lock $MUTEX_SIZE
ignore_sym sched_block_list_lock $MUTEX_SIZE
ignore_sym sched_sleep_list_lock $MUTEX_SIZE
ignore_sym frame_lock $MUTEX_SIZE
ignore_sym zfod_sibling_lock $MUTEX_SIZE
ignore_sym pm_promise_lock $MUTEX_SIZE
ignore_sym mm_lock $SEM_SIZE
ignore_sym kb_input_sem $SEM_SIZE
ignore_sym kb_char_sem $SEM_SIZE

####################################################
#### Decision-point / Exploration configuration ####
####################################################

# Define choice points in your kernel itself using tell_landslide_decide().

# List the functions that landslide should "pay attention" to; i.e., landslide
# will only make decision points if tell_landslide_decide() occurs within the
# execution of one of these functions.
# If you don't within_function at all, landslide will "pay attention" to
# everything by default.

within_function do_vanish
#within_function sys_wait

# You may also list functions that landslide should NOT pay attention to; i.e.,
# even if within one of the "within_function"s (or if none were specified),
# landslide will not make decision points if within a "without_function" also.
# Sequentially-later (i.e. in this file) calls to either within_function or
# without_function take precedence over earlier ones.

#without_function vm_clear

##########################
#### Advanced options ####
##########################

# If you need to know any other global variables when implementing the
# in-landslide hooks, write them here. First argument is the symbol name in your
# kernel; second argument is the name of the define for its address that you'll
# be able to use.

#extra_sym foobaz FOOBAZ

# Landslide has detection for "all threads are wedged", but it's imperfect, so
# by default we let the kernel keep running. If you see an "all threads wedged?"
# message and your kernel doesn't seem to be making progress, change this to 1.
BUG_ON_THREADS_WEDGED=1

# Exploring "backwards" means starting with a forced preemption at every
# decision point. Exploring "forwards" means letting threads continue running by
# default and adding extra preemptions as exploration progresses.
# Backwards is likely to find bugs much more quickly, but will produce a
# longer, more difficult to understand debug trace.
# !!!   Backwards is the recommended default! Only change this if you've   !!!
# !!!     already found a bug and are trying to understand it better!      !!!
EXPLORE_BACKWARDS=1

# vim: ft=sh
